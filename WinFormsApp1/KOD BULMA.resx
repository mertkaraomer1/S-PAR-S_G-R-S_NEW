<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="toolStripButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>